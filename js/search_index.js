var search_data = {"index":{"searchIndex":["object","ppp","perception","numerici","seesession","stringspreadi","timei","adjust_level()","analyze_columns()","beautify()","beautify_array_1dim()","beautify_array_2dim()","beautify_focus_level1()","beautify_hash()","beautify_multi()","beautify_object()","bench()","classify_structure()","clear!()","clear_indent!()","comma_newline()","fast!()","flash!()","indent!()","init()","inspect_or_to_s()","inspect_pp()","inspect_see()","inspect_see()","inspect_see()","instance()","left!()","log()","log_status()","logger()","new()","pp()","pp_hash()","pretty_print()","printout()","process_newline()","process_print()","rawlog()","see()","see_each()","see_flash()","see_pp()","see_print()","see_puts()","see_temp()","seee()","seplist()","significant()","slow!()","spread()","spread_line()","temp!()","to_s()","wait!()","wait_for_key()","history","license","readme"],"longSearchIndex":["object","ppp","perception","perception::numerici","perception::seesession","perception::stringspreadi","perception::timei","perception::seesession#adjust_level()","perception::stringspreadi#analyze_columns()","ppp::beautify()","ppp::beautify_array_1dim()","ppp::beautify_array_2dim()","ppp::beautify_focus_level1()","ppp::beautify_hash()","ppp::beautify_multi()","ppp::beautify_object()","perception::seesession#bench()","ppp::classify_structure()","perception::seesession#clear!()","perception::seesession#clear_indent!()","ppp#comma_newline()","perception::seesession#fast!()","perception::seesession#flash!()","perception::seesession#indent!()","perception::seesession#init()","object#inspect_or_to_s()","object#inspect_pp()","object#inspect_see()","perception::numerici#inspect_see()","perception::timei#inspect_see()","perception::seesession::instance()","perception::seesession#left!()","object#log()","perception::seesession#log_status()","perception::seesession#logger()","perception::seesession::new()","ppp::pp()","ppp#pp_hash()","perception::timei#pretty_print()","perception::seesession#printout()","perception::seesession#process_newline()","perception::seesession#process_print()","object#rawlog()","object#see()","object#see_each()","object#see_flash()","object#see_pp()","object#see_print()","object#see_puts()","object#see_temp()","object#seee()","ppp#seplist()","perception::numerici#significant()","perception::seesession#slow!()","perception::stringspreadi#spread()","perception::stringspreadi#spread_line()","perception::seesession#temp!()","perception::timei#to_s()","perception::seesession#wait!()","object#wait_for_key()","","",""],"info":[["Object","","Object.html","",""],["PPP","","PPP.html","",""],["Perception","","Perception.html","","<p>Perception: Human perceptible printouts\n<p>\n<p>Welcome to Perception. It’s a intuitive toolkit for simple everyday …\n"],["Perception::NumericI","","Perception/NumericI.html","",""],["Perception::SeeSession","","Perception/SeeSession.html","","<p>Eine SeeSession-Instanz entspricht einer Session mit der Konsole.\n<p>Eine SeeSession-Instanz entspricht einer …\n"],["Perception::StringSpreadI","","Perception/StringSpreadI.html","",""],["Perception::TimeI","","Perception/TimeI.html","",""],["adjust_level","Perception::SeeSession","Perception/SeeSession.html#method-i-adjust_level","()",""],["analyze_columns","Perception::StringSpreadI","Perception/StringSpreadI.html#method-i-analyze_columns","(options={})",""],["beautify","PPP","PPP.html#method-c-beautify","(string)","<p>Nachbearbeitung des PrettyPrint-Results\n"],["beautify_array_1dim","PPP","PPP.html#method-c-beautify_array_1dim","(string)","<p>Eindimensionales Array oder Objekt, das sich wie ein Array ausdruckt – vor\nder eckigen Klammer ist ein …\n"],["beautify_array_2dim","PPP","PPP.html#method-c-beautify_array_2dim","(string)","<p>Zweidimensionales Array\n<p>very hackish\n"],["beautify_focus_level1","PPP","PPP.html#method-c-beautify_focus_level1","(string)","<p>Level 2+ : nur noch eine Zeile\n<p>Level 3+ : komplexe Objekte zusammenkürzen\n"],["beautify_hash","PPP","PPP.html#method-c-beautify_hash","(string)","<p>Hash\n"],["beautify_multi","PPP","PPP.html#method-c-beautify_multi","(string)","<p>Mehrere Ausgaben in einer Zeile. Die einzelnen Ausgaben liegen als Array\nvor. Das Ergebnis soll aber …\n"],["beautify_object","PPP","PPP.html#method-c-beautify_object","(string)","<p>Object\n"],["bench","Perception::SeeSession","Perception/SeeSession.html#method-i-bench","()","<p>Returns the time in seconds since the last #see-printout.\n"],["classify_structure","PPP","PPP.html#method-c-classify_structure","(object)","<p>Klassifiziert die Struktur eines Objektes für die Ausgabe\n"],["clear!","Perception::SeeSession","Perception/SeeSession.html#method-i-clear-21","()","<p>Undos the last print.  Note: Indention will get lost.\n"],["clear_indent!","Perception::SeeSession","Perception/SeeSession.html#method-i-clear_indent-21","()",""],["comma_newline","PPP","PPP.html#method-i-comma_newline","()",""],["fast!","Perception::SeeSession","Perception/SeeSession.html#method-i-fast-21","()","<p>Adjusts printing speed to full speed. This is used after slow!\n"],["flash!","Perception::SeeSession","Perception/SeeSession.html#method-i-flash-21","(alternativtext=' ', how_many=6)","<p>Shows two informations in one line. See the demo.\n<p>Via seee.flash! können zwei Informationen abwechselnd …\n"],["indent!","Perception::SeeSession","Perception/SeeSession.html#method-i-indent-21","()","<p>Turns automatic indention ON.\n"],["init","Perception::SeeSession","Perception/SeeSession.html#method-i-init","()",""],["inspect_or_to_s","Object","Object.html#method-i-inspect_or_to_s","()","<p>Liefert entweder inspect oder to_s, je nach Klassenzugehörigkeit Explizite\nTypabfrage ohne duck typing! …\n"],["inspect_pp","Object","Object.html#method-i-inspect_pp","( wrap = 200 )","<p>Like inspect, but uses the PrettyPrint library.  Returns the output of pp\nas String.\n"],["inspect_see","Object","Object.html#method-i-inspect_see","( wrap = 200 )","<p>inspect_pp with beautification\n"],["inspect_see","Perception::NumericI","Perception/NumericI.html#method-i-inspect_see","(options={})","<p>Formatiert eine Zahl so, dass sie leicht menschenlesbar wird:\n<p>Quasi-rechtsbündig (mit dem Komma als  …\n"],["inspect_see","Perception::TimeI","Perception/TimeI.html#method-i-inspect_see","(options={})",""],["instance","Perception::SeeSession","Perception/SeeSession.html#method-c-instance","()","<p>Liefert die eine notwendige Instanz\n"],["left!","Perception::SeeSession","Perception/SeeSession.html#method-i-left-21","()","<p>Turns automatic indention OFF.\n"],["log","Object","Object.html#method-i-log","(input=:kein_input, *rest)","<p>Same as method see, but outputs in logfile only\n"],["log_status","Perception::SeeSession","Perception/SeeSession.html#method-i-log_status","(message='')",""],["logger","Perception::SeeSession","Perception/SeeSession.html#method-i-logger","( logdir=nil, filename='see.log' )",""],["new","Perception::SeeSession","Perception/SeeSession.html#method-c-new","()",""],["pp","PPP","PPP.html#method-c-pp","(obj, out=$>, width=79 )",""],["pp_hash","PPP","PPP.html#method-i-pp_hash","(obj)","<p>Hashes mit mehr als drei Keys werden untereinander dargestellt\n"],["pretty_print","Perception::TimeI","Perception/TimeI.html#method-i-pretty_print","(q)",""],["printout","Perception::SeeSession","Perception/SeeSession.html#method-i-printout","(string, backward=nil)",""],["process_newline","Perception::SeeSession","Perception/SeeSession.html#method-i-process_newline","()","<p>Führt die aufgeschobenen Newlines aus. Ohne Berücksichtigung der Zeit.\n"],["process_print","Perception::SeeSession","Perception/SeeSession.html#method-i-process_print","( input, options={} )","<p>Gibt das see aus\n"],["rawlog","Object","Object.html#method-i-rawlog","(input='')","<p>raw output into logfile\n"],["see","Object","Object.html#method-i-see","(input=:kein_input, *rest)","<p>This is the main method. It prints out objects. See the demo.\n"],["see_each","Object","Object.html#method-i-see_each","(input)",""],["see_flash","Object","Object.html#method-i-see_flash","(input=:kein_input, alternativtext=' ', times=6)","<p>Shows two informations in one line. See the demo.\n"],["see_pp","Object","Object.html#method-i-see_pp","(input=:kein_input)","<p>Like see, but forces behavior like the originally pp method.\n"],["see_print","Object","Object.html#method-i-see_print","(input=$_)","<p>Like see, but forces behavior like the originally print method.\n<p>So you have fully control over your newlines. …\n"],["see_puts","Object","Object.html#method-i-see_puts","(input=:kein_input)","<p>Like see, but forces behavior like the originally puts method.  So you get\na newline after every print. …\n"],["see_temp","Object","Object.html#method-i-see_temp","(input=:kein_input)","<p>Like see, but temporary print.  The following print will overwrite it. \nNote: Indention will get lost. …\n"],["seee","Object","Object.html#method-i-seee","()","<p>Returns the SeeSession-Object. Offers the following methods:\n<p>seee.indent!\n<p>seee.left!\n"],["seplist","PPP","PPP.html#method-i-seplist","(list, sep=nil, iter_method=:each)","<p>sorgt dafür, dass Listen länger als 3 Elemente untereinander ausgegeben\nwerden\n"],["significant","Perception::NumericI","Perception/NumericI.html#method-i-significant","( precision = 3)","<p>Streicht überflüssige Stellen weg. Wandelt in Integer um, wenn das ohne\nInformationsverlust möglich ist. …\n"],["slow!","Perception::SeeSession","Perception/SeeSession.html#method-i-slow-21","(speed=1)","<p>Slows down output to readable speed.  The speed depends on the length and\nthe complexity of the printing. …\n"],["spread","Perception::StringSpreadI","Perception/StringSpreadI.html#method-i-spread","(options={})",""],["spread_line","Perception::StringSpreadI","Perception/StringSpreadI.html#method-i-spread_line","(tabstops=[], search=/,/, position_add=nil, start=0)","<p>Erzwingt ein bestimmtes Zeichen nur an Tabstop-Positionen Mit position_add=\n0 werden die Spaces vor dem …\n"],["temp!","Perception::SeeSession","Perception/SeeSession.html#method-i-temp-21","()","<p>Marks the last print as temporary. The following print will overwrite it. \nNote: Indention will get lost. …\n"],["to_s","Perception::TimeI","Perception/TimeI.html#method-i-to_s","()",""],["wait!","Perception::SeeSession","Perception/SeeSession.html#method-i-wait-21","(string_akt)","\n<pre>Ausgeben</pre>\n"],["wait_for_key","Object","Object.html#method-i-wait_for_key","(message='Press any key')","<p>Waits for you / the user to press a key. Returns the key. Display it with\n#{wait_for_key.chr.inspect …\n"],["History","","History_txt.html","","<p>0.3.2 2012-10-08\n<p>smart_init\n\n<p>0.3.0 2012-10-08\n"],["License","","License_txt.html","","<p>License\n<p>Creative Commons Attribution-Share Alike 3.0 Germany\n<p>(cc-by-sa) creativecommons.org/licenses/by-sa/3.0/de/deed.en …\n"],["README","","README_txt.html","","<p>Perception - Readable Printouts For Logs And Console\n<p>bklippstein.github.com/perception/\n<p>Powerfull replacement …\n"]]}}